{
  "$schema": "https://raw.githubusercontent.com/sims4toolkit/misc/main/json-schemas/docs-item-schema.json",
  "header": {
    "title": {
      "prefix": "abstract class",
      "name": "WritableModel",
      "extends": [
        {
          "name": "ApiModelBase",
          "path": {
            "pkg": "models",
            "group": "abstracts",
            "item": "ApiModelBase"
          }
        }
      ]
    },
    "description": "Base class for models that can be written to disk.",
    "sourceCode": "src/lib/base/writable-model.ts"
  },
  "sections": [
    {
      "title": "Properties",
      "content": [
        {
          "displayType": "property",
          "prefix": "get",
          "name": "bufferCache",
          "type": {
            "name": "CompressedBuffer",
            "path": {
              "pkg": "compression",
              "group": "interfaces",
              "item": "CompressedBuffer"
            }
          },
          "description": "The current buffer cache, if there is any."
        },
        {
          "displayType": "property",
          "prefix": "get, set",
          "name": "defaultCompressionType",
          "type": {
            "name": "CompressionType",
            "path": {
              "pkg": "compression",
              "group": "enums",
              "item": "CompressionType"
            }
          },
          "description": "How this model's buffer should be compressed by default. This is not necessarily the same as the compression type of the current buffer cache."
        },
        {
          "displayType": "property",
          "prefix": "get",
          "name": "hasBufferCache",
          "type": {
            "name": "boolean"
          },
          "description": "Whether this model currently has a cached buffer. True when the buffer is cached, false when it's not."
        }
      ]
    },
    {
      "title": "Methods",
      "content": [
        {
          "displayType": "function",
          "name": "getBuffer",
          "returnType": {
            "name": "Buffer"
          },
          "description": "Returns an uncompressed buffer for this model. If an uncompressed buffer is available in the cache, it will be returned.",
          "arguments": [
            {
              "name": "cache",
              "optional": true,
              "type": {
                "name": "boolean"
              },
              "description": "Whether or not the buffer that is returned by this method should be cached. If the buffer is already cached, it will not be deleted if this argument is false. False by default."
            },
            {
              "name": "minify",
              "optional": true,
              "type": {
                "name": "boolean"
              },
              "description": "Whether or not to minify the output buffer, if possible. Not all models can be minified. False by default."
            }
          ]
        },
        {
          "displayType": "function",
          "prefix": "async",
          "name": "getBufferAsync",
          "returnType": {
            "name": "Promise<Buffer>"
          },
          "description": "Asynchronously returns an uncompressed buffer for this model. If an uncompressed buffer is available in the cache, it will be returned.",
          "arguments": [
            {
              "name": "cache",
              "optional": true,
              "type": {
                "name": "boolean"
              },
              "description": "Whether or not the buffer that is returned by this method should be cached. If the buffer is already cached, it will not be deleted if this argument is false. False by default."
            },
            {
              "name": "minify",
              "optional": true,
              "type": {
                "name": "boolean"
              },
              "description": "Whether or not to minify the output buffer, if possible. Not all models can be minified. False by default."
            }
          ]
        },
        {
          "displayType": "function",
          "name": "getCompressedBuffer",
          "returnType": {
            "name": "CompressedBuffer",
            "path": {
              "pkg": "compression",
              "group": "interfaces",
              "item": "CompressedBuffer"
            }
          },
          "description": "Returns a wrapper for the compressed buffer for this model. If a buffer in the correct compression format is cached on this model, it will be returned.",
          "arguments": [
            {
              "name": "targetCompressionType",
              "optional": true,
              "type": {
                "name": "CompressionType",
                "path": {
                  "pkg": "compression",
                  "group": "interfaces",
                  "item": "CompressionType"
                }
              },
              "description": "How the buffer should be compressed. If not given, the default compression type for this model is used."
            },
            {
              "name": "cache",
              "optional": true,
              "type": {
                "name": "boolean"
              },
              "description": "Whether or not the buffer that is returned by this method should be cached. If the buffer is already cached, it will not be deleted if this argument is false. False by default."
            },
            {
              "name": "minify",
              "optional": true,
              "type": {
                "name": "boolean"
              },
              "description": "Whether or not to minify the output buffer, if possible. Not all models can be minified. False by default."
            }
          ]
        },
        {
          "displayType": "function",
          "prefix": "async",
          "name": "getCompressedBufferAsync",
          "returnType": {
            "name": "Promise<CompressedBuffer>",
            "path": {
              "pkg": "compression",
              "group": "interfaces",
              "item": "CompressedBuffer"
            }
          },
          "description": "Asynchronously returns a wrapper for the compressed buffer for this model. If a buffer in the correct compression format is cached on this model, it will be returned.",
          "arguments": [
            {
              "name": "targetCompressionType",
              "optional": true,
              "type": {
                "name": "CompressionType",
                "path": {
                  "pkg": "compression",
                  "group": "interfaces",
                  "item": "CompressionType"
                }
              },
              "description": "How the buffer should be compressed. If not given, the default compression type for this model is used."
            },
            {
              "name": "cache",
              "optional": true,
              "type": {
                "name": "boolean"
              },
              "description": "Whether or not the buffer that is returned by this method should be cached. If the buffer is already cached, it will not be deleted if this argument is false. False by default."
            },
            {
              "name": "minify",
              "optional": true,
              "type": {
                "name": "boolean"
              },
              "description": "Whether or not to minify the output buffer, if possible. Not all models can be minified. False by default."
            }
          ]
        },
        {
          "displayType": "function",
          "name": "onChange",
          "description": "Deletes this model's cache and notifies its owner to do the same. You should never have to call this yourself.",
          "overrides": {
            "name": "ApiModelBase",
            "path": {
              "pkg": "models",
              "group": "abstracts",
              "item": "ApiModelBase"
            }
          }
        }
      ]
    }
  ]
}